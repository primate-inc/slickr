f.inputs for: [
  :schedule, f.object.schedule || Slickr::Schedule.new
] do |ff|
  if resource.new_record? &&
     resource.class.try(:slickr_schedulable_opts).try(:[], :on_create) == :unpublish
    ff.template.concat(
      '<li class="string">'\
        '<label class="label">This record will be unpublished when created</label>'\
      '</li>'.html_safe
    )
  else
    if authorized?(:publish, resource.class)
      ff.input :publish_schedule_date,
               as: :datepicker,
               label: 'Scheduled date',
               datepicker_options: {
                 dateFormat: 'dd-MM-yy'
               },
               input_html: {
                 value: ff.object
                   .publish_schedule_date.try(:strftime, '%d-%B-%Y')
               }
      ff.input :publish_schedule_time,
               as: :time_picker,
               label: 'Scheduled time',
               wrapper_html: { class: 'clockpicker', 'data-autoclose': 'true' },
               input_html: {
                 value: ff.object
                   .publish_schedule_time
                   .try(:localtime).try(:strftime, '%H:%M')
               }
    else
      ff.template.concat(
        '<li class="string">'\
          '<label class="label">You do not have permission for this action</label>'\
        '</li>'.html_safe
      )
    end
  end
end
